


ARM Macro Assembler    Page 1 


    1 00000000         #line   1                "..\\..\\mbed_os\\rtos\\TARGET_
CORTEX\\TARGET_CORTEX_M\\TOOLCHAIN_ARM\\except.S"
    1 00000000         ;
    2 00000000         
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000         
    7 00000000         
    8 00000000         
    9 00000000         
   10 00000000         
   11 00000000         
   12 00000000         
   13 00000000         
   14 00000000         
   15 00000000         
   16 00000000         
   17 00000000         
   18 00000000         
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000         
   23 00000000         
   24 00000000         
   25 00000000         
   26 00000000         
   27 00000000         
   28 00000000         
   29 00000000         
   30 00000000 00000010 
                       FAULT_TYPE_HARD_FAULT
                               EQU              0x10
   31 00000000 00000020 
                       FAULT_TYPE_MEMMANAGE_FAULT
                               EQU              0x20
   32 00000000 00000030 
                       FAULT_TYPE_BUS_FAULT
                               EQU              0x30
   33 00000000 00000040 
                       FAULT_TYPE_USAGE_FAULT
                               EQU              0x40
   34 00000000         
   35 00000000                 PRESERVE8
   36 00000000                 THUMB
   37 00000000         
   38 00000000                 AREA             |.text|, CODE, READONLY
   39 00000000         
   40 00000000         HardFault_Handler
                               PROC
   41 00000000         
   42 00000000                 EXPORT           HardFault_Handler
   43 00000000 F04F 0310       LDR              R3,=FAULT_TYPE_HARD_FAULT
   44 00000004 E7FE            B                Fault_Handler
   45 00000006                 ENDP
   46 00000006         
   47 00000006         MemManage_Handler
                               PROC



ARM Macro Assembler    Page 2 


   48 00000006         
   49 00000006                 EXPORT           MemManage_Handler
   50 00000006 F04F 0320       LDR              R3,=FAULT_TYPE_MEMMANAGE_FAULT
   51 0000000A E7FE            B                Fault_Handler
   52 0000000C                 ENDP
   53 0000000C         
   54 0000000C         BusFault_Handler
                               PROC
   55 0000000C         
   56 0000000C                 EXPORT           BusFault_Handler
   57 0000000C F04F 0330       LDR              R3,=FAULT_TYPE_BUS_FAULT
   58 00000010 E7FE            B                Fault_Handler
   59 00000012                 ENDP
   60 00000012         
   61 00000012         UsageFault_Handler
                               PROC
   62 00000012         
   63 00000012                 EXPORT           UsageFault_Handler
   64 00000012 F04F 0340       LDR              R3,=FAULT_TYPE_USAGE_FAULT
   65 00000016 E7FE            B                Fault_Handler
   66 00000018                 ENDP
   67 00000018         
   68 00000018         Fault_Handler
                               PROC
   69 00000018                 EXPORT           Fault_Handler
   70 00000018         
   71 00000018                 IMPORT           osRtxInfo
   72 00000018                 IMPORT           mbed_fault_handler
   73 00000018                 IMPORT           mbed_fault_context
   74 00000018         
   75 00000018 F3EF 8008       MRS              R0,MSP
   76 0000001C F04F 0104       LDR              R1,=0x4
   77 00000020 4672            MOV              R2,LR
   78 00000022 420A            TST              R2,R1       ; Check EXC_RETURN 
                                                            for bit 2
   79 00000024 D001            BEQ              Fault_Handler_Continue
   80 00000026 F3EF 8009       MRS              R0,PSP
   81 0000002A         
   82 0000002A         Fault_Handler_Continue
   83 0000002A 469C            MOV              R12,R3
   84 0000002C 4924            LDR              R1,=mbed_fault_context
   85 0000002E 6802            LDR              R2,[R0]     ; Capture R0
   86 00000030 600A            STR              R2,[R1]
   87 00000032 3104            ADDS             R1,#4
   88 00000034 6842            LDR              R2,[R0,#4]  ; Capture R1
   89 00000036 600A            STR              R2,[R1]
   90 00000038 3104            ADDS             R1,#4
   91 0000003A 6882            LDR              R2,[R0,#8]  ; Capture R2
   92 0000003C 600A            STR              R2,[R1]
   93 0000003E 3104            ADDS             R1,#4
   94 00000040 68C2            LDR              R2,[R0,#12] ; Capture R3
   95 00000042 600A            STR              R2,[R1]
   96 00000044 3104            ADDS             R1,#4
   97 00000046 C1F0            STMIA            R1!,{R4-R7} ; Capture R4..R7
   98 00000048 4647            MOV              R7,R8       ; Capture R8
   99 0000004A 600F            STR              R7,[R1]
  100 0000004C 3104            ADDS             R1,#4
  101 0000004E 464F            MOV              R7,R9       ; Capture R9
  102 00000050 600F            STR              R7,[R1]



ARM Macro Assembler    Page 3 


  103 00000052 3104            ADDS             R1,#4
  104 00000054 4657            MOV              R7,R10      ; Capture R10
  105 00000056 600F            STR              R7,[R1]
  106 00000058 3104            ADDS             R1,#4
  107 0000005A 465F            MOV              R7,R11      ; Capture R11
  108 0000005C 600F            STR              R7,[R1]
  109 0000005E 3104            ADDS             R1,#4
  110 00000060 6902            LDR              R2,[R0,#16] ; Capture R12
  111 00000062 600A            STR              R2,[R1]
  112 00000064 3108            ADDS             R1,#8       ; Add 8 here to cap
                                                            ture LR next, we wi
                                                            ll capture SP later
                                                            
  113 00000066 6942            LDR              R2,[R0,#20] ; Capture LR
  114 00000068 600A            STR              R2,[R1]
  115 0000006A 3104            ADDS             R1,#4
  116 0000006C 6982            LDR              R2,[R0,#24] ; Capture PC
  117 0000006E 600A            STR              R2,[R1]
  118 00000070 3104            ADDS             R1,#4
  119 00000072 69C2            LDR              R2,[R0,#28] ; Capture xPSR
  120 00000074 600A            STR              R2,[R1]
  121 00000076 3104            ADDS             R1,#4
  122 00000078         ; Adjust stack pointer to its original value and capture
                        it
  123 00000078 4603            MOV              R3,R0
  124 0000007A 3320            ADDS             R3,#0x20    ; Add 0x20 to get t
                                                            he SP value prior t
                                                            o exception
  125 0000007C F44F 7600       LDR              R6,=0x200
  126 00000080 4232            TST              R2,R6       ; Check for if STK 
                                                            was aligned by chec
                                                            king bit-9 in xPSR 
                                                            value
  127 00000082 D000            BEQ              Fault_Handler_Continue1
  128 00000084 3304            ADDS             R3,#0x4
  129 00000086         
  130 00000086         Fault_Handler_Continue1
  131 00000086 4675            MOV              R5,LR
  132 00000088 F04F 0610       LDR              R6,=0x10    ; Check for bit-4 t
                                                            o see if FP context
                                                             was saved
  133 0000008C 4235            TST              R5,R6
  134 0000008E D100            BNE              Fault_Handler_Continue2
  135 00000090 3348            ADDS             R3,#0x48    ; 16 FP regs + FPCS
                                                            R + 1 Reserved
  136 00000092         
  137 00000092         Fault_Handler_Continue2
  138 00000092 460C            MOV              R4,R1
  139 00000094 3C10            SUBS             R4,#0x10    ; Set the location 
                                                            of SP in ctx
  140 00000096 6023            STR              R3,[R4]     ; Capture the adjus
                                                            ted SP
  141 00000098 F3EF 8209       MRS              R2,PSP      ; Get PSP          
                                                             
  142 0000009C 600A            STR              R2,[R1]
  143 0000009E 3104            ADDS             R1,#4
  144 000000A0 F3EF 8208       MRS              R2,MSP      ; Get MSP          
                                                             
  145 000000A4 600A            STR              R2,[R1]



ARM Macro Assembler    Page 4 


  146 000000A6 3104            ADDS             R1,#4
  147 000000A8 4672            MOV              R2,LR       ; Get current LR(EX
                                                            C_RETURN)          
                                                             
  148 000000AA 600A            STR              R2,[R1]
  149 000000AC 3104            ADDS             R1,#4
  150 000000AE F3EF 8214       MRS              R2,CONTROL  ; Get CONTROL Reg
  151 000000B2 600A            STR              R2,[R1]
  152 000000B4 4B03            LDR              R3,=mbed_fault_handler ; Load a
                                                            ddress of mbedFault
                                                            Handler
  153 000000B6 4660            MOV              R0,R12
  154 000000B8 4901            LDR              R1,=mbed_fault_context
  155 000000BA 4A03            LDR              R2,=osRtxInfo
  156 000000BC 4798            BLX              R3
  157 000000BE         
  158 000000BE E7FE            B                .           ; Just in case we c
                                                            ome back here      
                                                                      
  159 000000C0                 ENDP
  160 000000C0         
  161 000000C0         
  162 000000C0         
  163 000000C0                 END
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --cpreproc --diag_suppress=9931 --cpu=Cortex-M4.fp
 --apcs=interwork --depend=.\objects\except.d -o.\objects\except.o -I.\RTE\_mbe
d -ID:\ProgramFiles\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\De
vice\ST\STM32F4xx\Include -ID:\ProgramFiles\Keil_v5\ARM\CMSIS\Include --predefi
ne="__UVISION_VERSION SETA 525" --predefine="STM32F446xx SETA 1" --cpreproc_opt
s=-D__ASSERT_MSG,-DTRANSACTION_QUEUE_SIZE_SPI=2,-D__CORTEX_M4,-DUSB_STM_HAL,-DA
RM_MATH_CM4,-D__FPU_PRESENT=1,-DUSBHOST_OTHER,-D__MBED_CMSIS_RTOS_CM,-D__CMSIS_
RTOS --list=.\listings\except.lst ..\..\mbed_os\rtos\TARGET_CORTEX\TARGET_CORTE
X_M\TOOLCHAIN_ARM\except.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 38 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
   Uses
      None
Comment: .text unused
BusFault_Handler 0000000C

Symbol: BusFault_Handler
   Definitions
      At line 54 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
   Uses
      At line 56 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
Comment: BusFault_Handler used once
Fault_Handler 00000018

Symbol: Fault_Handler
   Definitions
      At line 68 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
   Uses
      At line 44 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
      At line 51 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
      At line 58 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
      At line 65 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
      At line 69 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S

Fault_Handler_Continue 0000002A

Symbol: Fault_Handler_Continue
   Definitions
      At line 82 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
   Uses
      At line 79 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
Comment: Fault_Handler_Continue used once
Fault_Handler_Continue1 00000086

Symbol: Fault_Handler_Continue1
   Definitions
      At line 130 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M
\\TOOLCHAIN_ARM\\except.S
   Uses
      At line 127 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M
\\TOOLCHAIN_ARM\\except.S
Comment: Fault_Handler_Continue1 used once
Fault_Handler_Continue2 00000092




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: Fault_Handler_Continue2
   Definitions
      At line 137 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M
\\TOOLCHAIN_ARM\\except.S
   Uses
      At line 134 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M
\\TOOLCHAIN_ARM\\except.S
Comment: Fault_Handler_Continue2 used once
HardFault_Handler 00000000

Symbol: HardFault_Handler
   Definitions
      At line 40 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
   Uses
      At line 42 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
Comment: HardFault_Handler used once
MemManage_Handler 00000006

Symbol: MemManage_Handler
   Definitions
      At line 47 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
   Uses
      At line 49 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
Comment: MemManage_Handler used once
UsageFault_Handler 00000012

Symbol: UsageFault_Handler
   Definitions
      At line 61 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
   Uses
      At line 63 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
Comment: UsageFault_Handler used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

FAULT_TYPE_BUS_FAULT 00000030

Symbol: FAULT_TYPE_BUS_FAULT
   Definitions
      At line 32 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
   Uses
      At line 57 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
Comment: FAULT_TYPE_BUS_FAULT used once
FAULT_TYPE_HARD_FAULT 00000010

Symbol: FAULT_TYPE_HARD_FAULT
   Definitions
      At line 30 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
   Uses
      At line 43 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
Comment: FAULT_TYPE_HARD_FAULT used once
FAULT_TYPE_MEMMANAGE_FAULT 00000020

Symbol: FAULT_TYPE_MEMMANAGE_FAULT
   Definitions
      At line 31 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
   Uses
      At line 50 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
Comment: FAULT_TYPE_MEMMANAGE_FAULT used once
FAULT_TYPE_USAGE_FAULT 00000040

Symbol: FAULT_TYPE_USAGE_FAULT
   Definitions
      At line 33 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
   Uses
      At line 64 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
Comment: FAULT_TYPE_USAGE_FAULT used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

mbed_fault_context 00000000

Symbol: mbed_fault_context
   Definitions
      At line 73 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
   Uses
      At line 84 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
      At line 154 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M
\\TOOLCHAIN_ARM\\except.S

mbed_fault_handler 00000000

Symbol: mbed_fault_handler
   Definitions
      At line 72 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
   Uses
      At line 152 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M
\\TOOLCHAIN_ARM\\except.S
Comment: mbed_fault_handler used once
osRtxInfo 00000000

Symbol: osRtxInfo
   Definitions
      At line 71 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M\
\TOOLCHAIN_ARM\\except.S
   Uses
      At line 155 in file ..\\..\\mbed_os\\rtos\\TARGET_CORTEX\\TARGET_CORTEX_M
\\TOOLCHAIN_ARM\\except.S
Comment: osRtxInfo used once
3 symbols
351 symbols in table
